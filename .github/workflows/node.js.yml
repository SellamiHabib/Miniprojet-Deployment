name: Node.js CI
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'
      - run: yarn install --frozen-lockfile
        with:
          args: --severity-threshold=high
      - run: yarn test:cov
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
      - run: yarn build
    env:
      PORT: ${{ secrets.PORT }}
      REDIS_HOST: ${{ secrets.REDIS_HOST }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      REDIS_PORT: ${{ secrets.REDIS_PORT }}
      REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
      HTTPS_ENABLED: ${{ secrets.HTTPS_ENABLED }}
      APP_URL: ${{ secrets.APP_URL }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  push:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: habibsellami3/tp2devops

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
        env:
          REGISTRY: docker.io/habibsellami3
          IMAGE_NAME: tp2devops

